/**
 * 4-bit CLA with Modified Full Adder.
 * Author: Naga Kandasamy
 * Date created: June 29, 2020
 * Date modified: September 12, 2021
 * 
 * Student name(s): Justin Ngo
 * Date modified: September 29, 2022
 */

CHIP CLA4 {
    IN x[4], y[4], cin;     // 4-bit inputs
    OUT z[4], cout;         // 4-bit output, 1 carry out bit

    PARTS:
    And(a=x[0], b=y[0], out=g0);
    And(a=x[1], b=y[1], out=g1);
    And(a=x[2], b=y[2], out=g2);
    And(a=x[3], b=y[3], out=g3);

    Or(a=x[0], b=y[0], out=p0);
    Or(a=x[1], b=y[1], out=p1);
    Or(a=x[2], b=y[2], out=p2);
    Or(a=x[3], b=y[3], out=p3);

    And(a=p0, b=cin, out=and1); 	// p0cin
    Or(a=g0, b=and1, out=c0);		// c0=g0+p0cin

    And(a=p1, b=g0, out=and2);		// p1g0
    And(a=p1, b=and1, out=and3);	// p1p0cin	
    Or(a=g1, b=and2, out=or1);		// g1+p1g0
    Or(a=or1, b=and3, out=c1);		// c1=g1+p1g0+p1p0cin

    And(a=p2, b=g1, out=and4);		// p2g1
    And(a=p2, b=and2, out=and5);	// p2p1g0
    And(a=p2, b=p1, out=and6);  	// p2p1
    And(a=and6, b=and1, out=and7);	// p2p1p0cin
    Or(a=g2, b=and4, out=or2);		// g2+p2g1
    Or(a=and5, b=and7, out=or3); 	// p2p1g0+p2p1p0cin
    Or(a=or2, b=or3, out=c2); 		// c2=g2+p2g1+p2p1g0+p2p1p0cin

    And(a=p3, b=g2, out=and8);		// p3g2
    And(a=p3, b=and4, out=and9);	// p3p2g1
    And(a=p3, b=p2, out=and10);		// p3p2
    And(a=and10, b=and2, out=and11);	// p3p2p1g0
    And(a=and10, b=and3, out=and12);	// p3p2p1p0cin
    Or(a=g3, b=and8, out=or4);		// g3+p3g2
    Or(a=and9, b=and11, out=or5);	// p3p2g1+p3p2p1g0
    Or(a=or4, b=or5, out=or6);		// g3+p3g2+p3p2g1+p3p2p1g0
    Or(a=or6, b=and12, out=cout);	// cout=c3=g3+p3g2+p3p2g1+p3p2p1g0+p3p2p1p0cin

    FullAdder(x=x[0], y=y[0], cin=cin, z=z[0]);
    FullAdder(x=x[1], y=y[1], cin=c0, z=z[1]);
    FullAdder(x=x[2], y=y[2], cin=c1, z=z[2]);
    FullAdder(x=x[3], y=y[3], cin=c2, z=z[3]);

}